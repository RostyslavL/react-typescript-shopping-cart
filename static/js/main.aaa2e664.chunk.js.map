{"version":3,"sources":["item/Item.styles.ts","item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","ack","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","clickedItem","prev","find","LinearProgress","console","log","Drawer","anchor","open","onClose","acc","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.aaa2e664.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    margin-top: 4rem;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 2px solid silver;\r\n    border-radius: 20px;\r\n    box-shadow: 2px 2px 4px 2px rgba(0,0,0, 0.4);\r\n\r\n    button{\r\n        border-radius: 0 0 20px 20px;\r\n    }\r\n\r\n    img{\r\n        max-height: 250px;\r\n        object-fit: cover;\r\n        border-radius: 20px 20px 0 0;\r\n    }\r\n\r\n    div{\r\n        font-family: Arial, Helvetica, sans-serif;\r\n        padding: 1rem;\r\n        height: 100%;\r\n    }\r\n`;","import Button from '@material-ui/core/Button';\r\n// Types\r\nimport {CartItemType} from '../App';\r\n//Styles \r\nimport {Wrapper} from './Item.styles';\r\n\r\ntype Props = {\r\n    item: CartItemType;\r\n    handleAddToCart:(clickedItem: CartItemType) => void;\r\n}\r\n\r\nconst Item: React.FC<Props> = ({ item, handleAddToCart}) =>(\r\n    <Wrapper >\r\n        <img src={item.image} alt={item.title} />\r\n        <div>\r\n            <h3>{item.title}</h3>\r\n            <p>{item.description}</p>\r\n            <h3>${item.price}</h3>\r\n        </div>\r\n        <Button onClick={() => handleAddToCart(item)}>Add To Cart</Button>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Item;\r\n","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    border-bottom: 1px solid silver;\r\n    padding-bottom:20px;\r\n\r\n    div{\r\n        flex: 1;\r\n    }\r\n    .information,\r\n    .buttons{\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n    .buttons{\r\n        cursor: pointer;\r\n    }\r\n    img{\r\n        max-width: 200px;\r\n        object-fit: cover;\r\n        margin-left: 40px;\r\n    }\r\n`;","import Button from '@material-ui/core/Button';\r\n// Types\r\nimport {CartItemType} from '../App';\r\n//Styles \r\nimport {Wrapper} from './CartItem.styles';\r\n\r\ntype Props = {\r\n    item: CartItemType;\r\n    addToCart:(clickedItem: CartItemType) => void;\r\n    removeFromCart: (id: number) => void\r\n}\r\n\r\n\r\nconst CartItem: React.FC<Props> = ({item, addToCart, removeFromCart}) => (\r\n    <Wrapper>\r\n        <div>\r\n            <h3>{item.title}</h3>\r\n            <div className=\"information\">\r\n                <p>Price : $ {item.price}</p>\r\n                <p>Total : $ {(item.amount * item.price).toFixed(2) }</p>\r\n            </div>\r\n                <div className=\"buttons\">\r\n                    <Button\r\n                        size=\"small\"\r\n                        disableElevation\r\n                        variant=\"contained\" \r\n                        onClick={() => removeFromCart(item.id)}\r\n                        > -\r\n                    </Button>\r\n                    <p>{item.amount}</p>\r\n                    <Button\r\n                        size=\"small\"\r\n                        disableElevation\r\n                        variant=\"contained\" \r\n                        onClick={() => addToCart(item)}\r\n                        > +\r\n                    </Button>\r\n                </div>\r\n        </div>\r\n        <img src={item.image} alt={item.title} />\r\n    </Wrapper>\r\n)\r\n\r\nexport default CartItem;","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.aside`\r\n    font-family:Arial, Helvetica, sans-serif;\r\n    width: 800px;\r\n    padding: 20px;\r\n`;","import CartItem from '../CartItem/CartItem';\r\n// Styles\r\nimport {Wrapper} from './Cart.styles';\r\n// Types\r\nimport {CartItemType} from '../App';\r\n\r\ntype Props = {\r\n  cartItems: CartItemType[];\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\r\n  const calculateTotal = (items: CartItemType[]) =>\r\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>Your Shopping Cart</h2>\r\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\r\n      {cartItems.map(item => (\r\n        <CartItem\r\n          key={item.id}\r\n          item={item}\r\n          addToCart={addToCart}\r\n          removeFromCart={removeFromCart}\r\n        />\r\n      ))}\r\n        <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cart;","import styled from 'styled-components'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\nexport const Wrapper = styled.div`\r\n    margin: 40px;\r\n\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n    position: fixed;\r\n    z-index: 100;\r\n    right: 20px;\r\n    top: 20px;\r\n\r\n`","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n// Components\nimport Item from './item/Item';\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n// Styles\nimport {Wrapper, StyledButton} from './App.styles';\n// Types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await(\n    await fetch('https://fakestoreapi.com/products')\n  ).json()\n\nconst App = () => {\n\n  const [cartOpen, setCartOpen] = useState(false)\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n\n  const {data, isLoading, error} = useQuery<CartItemType[]>('products', getProducts)\n\n  const getTotalItems = (items: CartItemType[]) => items.reduce((acc: number, item) => acc + item.amount, 0)\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems((prev) =>{\n      //  If is the item already added to the cart\n      const isItemInCart = prev.find(item => item.id === clickedItem.id)\n\n      if(isItemInCart){\n        return prev.map(item => (\n          item.id === clickedItem.id\n          ? {...item, amount:item.amount + 1}\n          : item\n        ))\n      }\n      // If this is a First time the item is added\n      return [...prev, {...clickedItem, amount:1}]\n    })\n  }\n\n  const hendleRemoveFromCart = (id: number) => {\n    setCartItems( prev => (\n      prev.reduce((acc, item) =>{\n        if(item.id === id){\n          if(item.amount === 1) return acc\n          return [...acc, {...item, amount: item.amount - 1}]\n        }else{\n          return [...acc, item]\n        }\n      }, [] as CartItemType[])\n    ))\n  }\n\n  if(isLoading) return <LinearProgress />\n  if(error) return <div>Something Went Wrong...</div>\n\n  console.log(data)\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={()=> setCartOpen(false)}>\n        <Cart \n          cartItems={cartItems} \n          addToCart={handleAddToCart} \n          removeFromCart={hendleRemoveFromCart}\n        />  \n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}> \n      <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n        <AddShoppingCartIcon />\n      </Badge>\n      </StyledButton>\n      <Grid container spacing={4}>\n        {data?.map(item => (\n          <Grid item key={item.id} xs={12} sm={4}>\n              <Item item={item} handleAddToCart={handleAddToCart} />  \n            </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport {QueryClient, QueryClientProvider} from 'react-query';\n\nconst client = new QueryClient()\n\nReactDOM.render(\n<QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}